# -------------------------------------------
# file path    : /etc/nginx/nginx.conf
# -------------------------------------------

load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;

# 컨테이너 시작 시 이미 Dockerfile 에 정의한 USER nginx-user 로 실행 권한을 제어하기 때문에, 아래 user 설정은 필요 없음
# user  nginx;
worker_processes  auto;

# error_log  /var/log/nginx/error.log notice;
error_log  /dev/stdout notice;
# NGINX 마스터 프로세스의 PID(P​rocess ID)를 기록할 파일 위치를 지정하는 역할
# 기본적으로 /var/run 디렉터리는 루트 소유이므로 하위 디렉토리를 만들어 사용
pid        /var/run/nginx/nginx.pid;


events {
    worker_connections  1024;
}


http {
    # 1) 버전 감추기 (nginx → nginx)
    server_tokens off;

    # 2) Server 헤더 자체 제거
    more_clear_headers Server;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # log format proxy
    log_format proxy '[$time_local] $remote_addr $upstream_cache_status $upstream_status $status - $request_method $scheme $host "$request_uri" [Length $body_bytes_sent] [Gzip $gzip_ratio] [Sent-to $proxy_host:$proxy_port] "$http_user_agent" "$http_x_forwarded_for" "$http_referer"';

    log_format standard '[$time_local] $status - $request_method $scheme $host "$request_uri" [Client $remote_addr] [Length $body_bytes_sent] [Gzip $gzip_ratio] "$http_user_agent" "$http_referer"';

    # access_log  /var/log/nginx/access.log  main;
    # access log stdout 으로 출력하기
    access_log /dev/stdout proxy;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # Nginx 가 응답 데이터를 클라이언트로 전송하는 동안  클라이언트의 응답대기를 위한 최대 시간 (default 60s)
    send_timeout 60s;

    #gzip  on;

    # Default upstream scheme
    map $host $forward_scheme {
        default http;
    }

    # for websocket
    map $http_upgrade $connection_upgrade {
   	default upgrade;
    	''      close;
    }

    include /etc/nginx/conf.d/*.conf;
}